(defun exp (x m)
    (if (= m 1)
        x
        (exp (* x x) (- m 1))
    )
)
(defun fact (x m)
    (if (= m 1)
        (* x (* -1 m))
        (exp (* x (- x 1)) (- m 1))
    )
)
(defun sin-cos-comp (x n)
    (cond
        ((< x 0) 0)
        ((evenp n) (+ (sin-cos-comp x (- n 2)) (/ (exp x n) (fact x x))))
        ((and (evenp n) (< -10 x) (> x 10)) (+ (sin-cos-comp x (- n 2)) (/ (exp x n) (fact x x))))
        (t 1)
    )
)
(print (sin-cos-comp 5 5))
